{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","redux/slices/searchBarSlice.js","redux/slices/foodRecipesSlice.js","redux/slices/drinkRecipesSlice.js","redux/slices/recipesCategoriesSlice.js","components/SearchBar.jsx","pages/DrinkRecipes.jsx","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","components/DrinkRecipeCard.jsx","components/DrinkCategories.jsx","pages/FoodRecipes.jsx","components/FoodCategories.jsx","components/MealRecipeCard.jsx","images/chiquem.png","redux/slices/surpriseRecipeSlice.js","redux/slices/ingredientListSlice.js","redux/slices/ingredientsDrinkSlice.js","redux/store.js","pages/DrinkDetails.jsx","pages/DrinkProgress.jsx","pages/Explore.jsx","pages/ExploreDrinks.jsx","pages/ExploreDrinksByIngredients.jsx","pages/ExploreFood.jsx","pages/ExploreFoodsByIngredients.jsx","pages/ExploreFoodsByOrigin.jsx","pages/FavoriteRecipes.jsx","pages/FoodDetails.jsx","pages/FoodProgress.jsx","components/Login.jsx","pages/Home.jsx","pages/Profile.jsx","pages/RecipesMade.jsx","App.js","serviceWorker.js","index.js"],"names":["container","display","justifyContent","alignItems","backgroundColor","titleStyle","padding","Header","props","title","searchBar","useState","showSearchBar","setShowSearchBar","style","to","data-testid","src","profileIcon","alt","type","onClick","searchIcon","defaultProps","position","left","bottom","width","textAling","Footer","drinkIcon","exploreIcon","mealIcon","searchBarSlice","createSlice","name","initialState","query","option","reducers","setQuery","state","action","payload","setOption","actions","fetchMeals","createAsyncThunk","a","response","fetch","json","fetchFoodById","id","fetchMealsByCategory","category","data","fecthSuggestedMeals","foodRecipesSlice","initialMeals","meals","mealDetail","suggestedMeals","populateMeals","extraReducers","builder","addCase","fulfilled","loading","rejected","pending","sixSuggestedMeals","slice","fetchDrinks","fetchDrinkById","fetchDrinksByCategory","fetchDrinksRecommended","drinkRecipesSlice","drinks","drinkDetail","suggestedDrink","initialDrinks","populateDrinks","sixSuggestedDrinks","fetchFoodCategories","fetchDrinkCategories","recipeCategoriesSlice","foodCategories","drinkCategories","error","SearchBar","handleSubmit","dispatch","useDispatch","useSelector","store","handleChange","e","target","value","placeholder","onChange","htmlFor","checked","DrinkRecipes","history","useHistory","drinkRecipes","submitted","setSubmitted","callFunctionDrinks","ingredientsListDrink","currentCategory","setCurrentCategory","length","global","alert","console","log","push","idDrink","useEffect","fetchBaseDrinks","baseDrinks","handleFilters","filteredDrinks","map","drink","index","key","renderDrinkCards","module","exports","DrinkRecipeCard","strDrinkThumb","strDrink","DrinkCategories","recipeCategories","baseCategories","strCategory","renderDrinkCategories","FoodRecipes","foodRecipes","callFunction","ingredientsList","fetchBaseMeals","baseMeals","idMeal","filteredMeals","meal","renderFoodCards","FoodCategories","renderFoodCategories","MealRecipeCard","strMealThumb","strMeal","fetchSurprise","surpiseRecipeSlice","surpriseApi","fetchIngredients","ingredientListSlice","ingredientsApi","callFunctionTrue","fetchIngredientsDrink","ingredientListDrinkSlice","ingredientsDrinkApi","callFunctionDrinksTrue","configureStore","reducer","searchBarReducer","foodRecipesReducer","drinkRecipesReducer","recipeCategoriesReducer","surpiseRecipe","surpriseRecipeReducer","ingredientListReducer","ingredientListDrinkReducer","window","Cypress","DrinkDetails","location","pathname","split","className","classNam","strAlcoholic","items","mensure","i","element","mapIngredients","strInstructions","indice","DrinkProgress","Explore","ExploreDrinks","ExploreDrinksByIngredients","filteredIngredientsDrink","nome","strIngredient1","ExploreFood","ExploreFoodsByIngredients","filteredIngredients","strIngredient","ExploreFoodsByOrigin","FavoriteRecipes","FoodDetails","strYoutube","frameBorder","allow","FoodProgress","Login","email","setEmail","password","setPassword","help","setHelp","toggleHelp","isDisabled","isPasswordValid","test","isLoginValid","disabled","localStorage","setItem","JSON","stringify","Home","onTouchMove","onDoubleClick","chiquem","Profile","parse","getItem","user","getEmail","handleClick","clear","RecipesMade","App","path","component","exact","Boolean","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fff152b1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\n\nconst container = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: 'rgb(248, 101, 101)',\n};\nconst titleStyle = { display: 'inline', padding: '20px' };\n\nexport default function Header(props) {\n  const { title, searchBar } = props;\n  const [showSearchBar, setShowSearchBar] = useState(false);\n\n  const toggleSearchBar = () => {\n    setShowSearchBar(!showSearchBar);\n  };\n\n  return (\n    <header>\n      <div style={ container }>\n        <Link to=\"/perfil\">\n          <img\n            data-testid=\"profile-top-btn\"\n            src={ profileIcon }\n            alt=\"Ícone de perfil\"\n          />\n        </Link>\n        <h1 data-testid=\"page-title\" style={ titleStyle }>\n          {title}\n        </h1>\n        {searchBar && (\n          <button type=\"button\" onClick={ toggleSearchBar }>\n            <img\n              data-testid=\"search-top-btn\"\n              src={ searchIcon }\n              alt=\"Lupa: Botão de pesquisa\"\n            />\n          </button>\n        )}\n      </div>\n      {showSearchBar && searchBar}\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  searchBar: PropTypes.objectOf(PropTypes.any),\n};\n\nHeader.defaultProps = {\n  searchBar: null,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n// Thomaz && Felippe\nconst container = {\n  display: 'flex',\n  justifyContent: 'space-around',\n  alignItems: 'center',\n  position: 'fixed',\n  left: 0,\n  bottom: 0,\n  width: '100%',\n  textAling: 'center',\n  backgroundColor: 'rgb(248, 101, 101)',\n};\n\nexport default function Footer() {\n  return (\n    <footer style={ container } data-testid=\"footer\">\n      <Link to=\"/bebidas\">\n        <img\n          src={ drinkIcon }\n          alt=\"bebidas\"\n          data-testid=\"drinks-bottom-btn\"\n        />\n      </Link>\n      <Link to=\"/explorar\">\n        <img\n          src={ exploreIcon }\n          alt=\"bebidas\"\n          data-testid=\"explore-bottom-btn\"\n        />\n      </Link>\n      <Link to=\"/comidas\">\n        <img\n          src={ mealIcon }\n          alt=\"bebidas\"\n          data-testid=\"food-bottom-btn\"\n        />\n      </Link>\n    </footer>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  query: '',\n  option: 'ingredient',\n};\n\nexport const searchBarSlice = createSlice({\n  name: 'searchBar',\n  initialState,\n  reducers: {\n    setQuery: (state, action) => {\n      state.query = action.payload;\n    },\n    setOption: (state, action) => {\n      state.option = action.payload;\n    },\n  },\n});\n\nexport const { setQuery, setOption } = searchBarSlice.actions;\n\nexport default searchBarSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n  initialMeals: [],\n  meals: [],\n  mealDetail: [],\n  suggestedMeals: [],\n};\n\nexport const fetchMeals = createAsyncThunk(\n  'foodRecipes/fetchMeals',\n  async (payload) => {\n    const { query, option } = payload;\n    let response = {};\n    switch (option) {\n    case 'ingredient':\n      response = await fetch(\n        `https://www.themealdb.com/api/json/v1/1/filter.php?i=${query}`,\n      );\n      break;\n    case 'name':\n      response = await fetch(\n        `https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`,\n      );\n      break;\n    case 'firstLetter':\n      response = await fetch(\n        `https://www.themealdb.com/api/json/v1/1/search.php?f=${query}`,\n      );\n      break;\n    default:\n      break;\n    }\n    return response.json();\n  },\n);\n\nexport const fetchFoodById = createAsyncThunk(\n  'foodRecipes/fetchFoodById',\n  async (id) => {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n    return response.json();\n  },\n);\n\nexport const fetchMealsByCategory = createAsyncThunk(\n  'foodRecipes/fetchMealsByCategory',\n  async (category) => {\n    const data = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n    const response = await data.json();\n    return response;\n  },\n);\n\nexport const fecthSuggestedMeals = createAsyncThunk(\n  'foodRecipes/fecthSuggestedMeals',\n  async () => {\n    const data = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    const response = await data.json();\n    return response;\n  },\n);\n\nexport const foodRecipesSlice = createSlice({\n  name: 'foodRecipes',\n  initialState,\n  reducers: {\n    populateMeals: (state, action) => {\n      state.meals = action.payload;\n      state.initialMeals = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMeals.fulfilled, (state, action) => {\n        state.meals = action.payload.meals;\n        state.loading = false;\n      })\n      .addCase(fetchMeals.rejected, (state) => {\n        state.meals = null;\n      })\n      .addCase(fetchMeals.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchMealsByCategory.fulfilled, (state, action) => {\n        state.meals = action.payload.meals;\n      })\n      .addCase(fetchFoodById.fulfilled, (state, action) => {\n        state.mealDetail = action.payload.meals;\n      })\n      .addCase(fecthSuggestedMeals.fulfilled, (state, action) => {\n        const SIX = 6;\n        const sixSuggestedMeals = action.payload.meals.slice(0, SIX);\n        state.suggestedMeals = sixSuggestedMeals;\n      });\n  },\n});\n\nexport const { populateMeals } = foodRecipesSlice.actions;\n\nexport default foodRecipesSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n  drinks: [],\n  drinkDetail: [],\n  suggestedDrink: [],\n  initialDrinks: [],\n};\n\nexport const fetchDrinks = createAsyncThunk(\n  'drinkRecipes/fetchDrinks',\n  async (payload) => {\n    const { query, option } = payload;\n    let response = {};\n    switch (option) {\n    case 'ingredient':\n      response = await fetch(\n        `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${query}`,\n      );\n      break;\n    case 'name':\n      response = await fetch(\n        `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${query}`,\n      );\n      break;\n    case 'firstLetter':\n      response = await fetch(\n        `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${query}`,\n      );\n      break;\n    default:\n      break;\n    }\n    return response.json();\n  },\n);\n\nexport const fetchDrinkById = createAsyncThunk(\n  'drinkRecipes/fetchDrinkById',\n  async (id) => {\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n    return response.json();\n  },\n);\n\nexport const fetchDrinksByCategory = createAsyncThunk(\n  'drinkRecipes/fetchDrinksByCategory',\n  async (category) => {\n    const data = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n    const response = await data.json();\n    return response;\n  },\n);\n\nexport const fetchDrinksRecommended = createAsyncThunk(\n  'drinkRecipes/fetchDrinksRecommended',\n  async () => {\n    const data = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    const response = await data.json();\n    return response;\n  },\n);\n\nexport const drinkRecipesSlice = createSlice({\n  name: 'drinkRecipes',\n  initialState,\n  reducers: {\n    populateDrinks: (state, action) => {\n      state.drinks = action.payload;\n      state.initialDrinks = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchDrinks.fulfilled, (state, action) => {\n        state.drinks = action.payload.drinks;\n      });\n    builder\n      .addCase(fetchDrinks.rejected, (state) => {\n        state.drinks = null;\n      });\n    builder\n      .addCase(fetchDrinksByCategory.fulfilled, (state, action) => {\n        state.drinks = action.payload.drinks;\n      });\n    builder\n      .addCase(fetchDrinkById.fulfilled, (state, action) => {\n        state.drinkDetail = action.payload.drinks;\n      });\n    builder\n      .addCase(fetchDrinksRecommended.fulfilled, (state, action) => {\n        const SIX = 6;\n        const sixSuggestedDrinks = action.payload.drinks.slice(0, SIX);\n        state.suggestedDrink = sixSuggestedDrinks;\n      });\n  },\n});\n\nexport const { populateDrinks } = drinkRecipesSlice.actions;\n\nexport default drinkRecipesSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  foodCategories: [],\n  drinkCategories: [],\n  error: '',\n};\n\nexport const fetchFoodCategories = createAsyncThunk(\n  'recipeCategories/fetchFoodCategories',\n  async () => {\n    const data = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n    const response = await data.json();\n    return response.meals;\n  },\n);\n\nexport const fetchDrinkCategories = createAsyncThunk(\n  'recipeCategories/fetchDrinkCategories',\n  async () => {\n    const data = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n    const response = await data.json();\n    return response.drinks;\n  },\n);\n\nconst recipeCategoriesSlice = createSlice({\n  name: 'recipeCategories',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchFoodCategories.fulfilled, (state, action) => {\n        state.foodCategories = action.payload;\n      });\n    builder\n      .addCase(fetchFoodCategories.rejected, (state) => {\n        state.error = 'Ocorreu um erro ao consultar as categorias das comidas.';\n      });\n    builder\n      .addCase(fetchDrinkCategories.fulfilled, (state, action) => {\n        state.drinkCategories = action.payload;\n      });\n    builder\n      .addCase(fetchDrinkCategories.rejected, (state) => {\n        state.error = 'Ocorreu um erro ao consultar as categorias das bebidas.';\n      });\n  },\n});\n\nexport default recipeCategoriesSlice.reducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setQuery, setOption } from '../redux/slices/searchBarSlice';\n\nconst container = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n\nexport default function SearchBar({ handleSubmit }) {\n  const dispatch = useDispatch();\n  const { query } = useSelector((store) => store.searchBar);\n\n  const handleChange = (e) => {\n    dispatch(setOption(e.target.value));\n  };\n\n  /// Bug no radio button\n  return (\n    <>\n      <div style={ container }>\n        <fieldset>\n          <input\n            data-testid=\"search-input\"\n            type=\"text\"\n            placeholder=\"Buscar receita\"\n            value={ query }\n            onChange={ (e) => {\n              dispatch(setQuery(e.target.value));\n            } }\n          />\n          <button\n            data-testid=\"exec-search-btn\"\n            type=\"button\"\n            onClick={ handleSubmit }\n          >\n            Buscar\n          </button>\n        </fieldset>\n      </div>\n      <div style={ container }>\n        <fieldset>\n          <label htmlFor=\"ingredient\">\n            <input\n              data-testid=\"ingredient-search-radio\"\n              checked\n              type=\"radio\"\n              name=\"option\"\n              value=\"ingredient\"\n              id=\"ingredient\"\n              onChange={ handleChange }\n            />\n            Ingrediente\n          </label>\n          <label data-testid=\"name-search-radio\" htmlFor=\"name\">\n            <input\n              type=\"radio\"\n              name=\"option\"\n              value=\"name\"\n              id=\"name\"\n              onChange={ handleChange }\n            />\n            Nome\n          </label>\n          <label data-testid=\"first-letter-search-radio\" htmlFor=\"firstLetter\">\n            <input\n              type=\"radio\"\n              name=\"option\"\n              value=\"firstLetter\"\n              id=\"firstLetter\"\n              onChange={ handleChange }\n            />\n            Primeira Letra\n          </label>\n        </fieldset>\n      </div>\n    </>\n  );\n}\n\nSearchBar.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\nimport DrinkRecipeCard from '../components/DrinkRecipeCard';\nimport {\n  fetchDrinks,\n  fetchDrinksByCategory,\n  populateDrinks,\n} from '../redux/slices/drinkRecipesSlice';\nimport DrinkCategories from '../components/DrinkCategories';\n\nexport default function DrinkRecipes() {\n  const title = 'Bebidas';\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { query, option } = useSelector((store) => store.searchBar);\n  const { drinks, initialDrinks } = useSelector((store) => store.drinkRecipes);\n  const [submitted, setSubmitted] = useState(false);\n  const { callFunctionDrinks } = useSelector(\n    (store) => store.ingredientsListDrink,\n  );\n  const [currentCategory, setCurrentCategory] = useState('');\n\n  const handleSubmit = () => {\n    setSubmitted(true);\n    const payload = { query, option };\n    if (query.length !== 1 && option === 'firstLetter') {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n      console.log(query.length);\n    } else {\n      dispatch(fetchDrinks(payload));\n      if (drinks.length === 1) history.push(`/bebidas/${drinks[0].idDrink}`);\n    }\n  };\n\n  const handleFilters = ({ target }) => {\n    if (target.value === currentCategory || target.value === 'All') {\n      dispatch(populateDrinks(initialDrinks));\n      setCurrentCategory('');\n    } else {\n      const category = target.value;\n      dispatch(fetchDrinksByCategory(category));\n      setCurrentCategory(target.value);\n    }\n  };\n\n  const renderDrinkCards = () => {\n    const MAX_LENGTH = 12;\n    const filteredDrinks = drinks.slice(0, MAX_LENGTH);\n    console.log(filteredDrinks);\n    return (\n      <section>\n        {filteredDrinks\n          && filteredDrinks.map((drink, index) => (\n            <DrinkRecipeCard key={ drink.idDrink } index={ index } drink={ drink } />\n          ))}\n      </section>\n    );\n  };\n\n  useEffect(() => {\n    const fetchBaseDrinks = async () => {\n      const baseDrinks = await fetch(\n        'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=',\n      );\n      const response = await baseDrinks.json();\n      dispatch(populateDrinks(response.drinks));\n    };\n    if (callFunctionDrinks === true) {\n      handleSubmit();\n    } else {\n      fetchBaseDrinks();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!drinks) {\n      global.alert(\n        'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n      );\n    } else if (submitted === true && drinks.length === 1) {\n      history.push(`/bebidas/${drinks[0].idDrink}`);\n    }\n  }, [drinks]);\n\n  return (\n    <>\n      <Header\n        title={ title }\n        searchBar={ <SearchBar handleSubmit={ handleSubmit } /> }\n      />\n      <main>\n        <DrinkCategories handleFilters={ handleFilters } />\n        {drinks && renderDrinkCards()}\n      </main>\n      <Footer />\n    </>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function DrinkRecipeCard({ drink, index }) {\n  return (\n    <Link to={ `/bebidas/${drink.idDrink}` }>\n      <div data-testid={ `${index}-recipe-card` }>\n        <img\n          data-testid={ `${index}-card-img` }\n          src={ drink.strDrinkThumb }\n          alt={ drink.strDrink }\n          width=\"100\"\n        />\n        <p data-testid={ `${index}-card-name` }>{ drink.strDrink }</p>\n      </div>\n    </Link>\n  );\n}\n\nDrinkRecipeCard.propTypes = {\n  drink: PropTypes.shape({\n    idDrink: PropTypes.string.isRequired,\n    strDrink: PropTypes.string.isRequired,\n    strDrinkThumb: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchDrinkCategories } from '../redux/slices/recipesCategoriesSlice';\n\nexport default function DrinkCategories({ handleFilters }) {\n  const dispatch = useDispatch();\n  const { drinkCategories } = useSelector((store) => store.recipeCategories);\n\n  const renderDrinkCategories = () => {\n    const MAX_LENGTH = 5;\n    const baseCategories = drinkCategories.slice(0, MAX_LENGTH);\n    return (\n      <section>\n        { baseCategories.map((category) => (\n          <button\n            type=\"button\"\n            value={ category.strCategory }\n            data-testid={ `${category.strCategory}-category-filter` }\n            key={ category.strCategory }\n            onClick={ handleFilters }\n          >\n            { category.strCategory }\n          </button>\n\n        ))}\n        <button\n          type=\"button\"\n          value=\"All\"\n          data-testid=\"All-category-filter\"\n          onClick={ handleFilters }\n        >\n          All\n        </button>\n      </section>\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchDrinkCategories());\n  }, []);\n\n  return (\n    <section>\n      { renderDrinkCategories() }\n    </section>\n  );\n}\n\nDrinkCategories.propTypes = {\n  handleFilters: PropTypes.func.isRequired,\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport Footer from '../components/Footer';\nimport FoodCategories from '../components/FoodCategories';\nimport Header from '../components/Header';\nimport MealRecipeCard from '../components/MealRecipeCard';\nimport SearchBar from '../components/SearchBar';\nimport {\n  fetchMeals,\n  fetchMealsByCategory,\n  populateMeals,\n} from '../redux/slices/foodRecipesSlice';\n\nexport default function FoodRecipes() {\n  const title = 'Comidas';\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { query, option } = useSelector((store) => store.searchBar);\n  const { meals, initialMeals } = useSelector((store) => store.foodRecipes);\n  const [submitted, setSubmitted] = useState(false);\n  const { callFunction } = useSelector((store) => store.ingredientsList);\n  const [currentCategory, setCurrentCategory] = useState('All');\n\n  const handleSubmit = () => {\n    setSubmitted(true);\n    const payload = { query, option };\n    if (query.length !== 1 && option === 'firstLetter') {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n      console.log(query.length);\n    } else {\n      dispatch(fetchMeals(payload));\n    }\n  };\n\n  // Resolver o porblema de sempre requisitar a api mais de uma vez\n  const handleFilters = ({ target }) => {\n    if (target.value === currentCategory || target.value === 'All') {\n      dispatch(populateMeals(initialMeals));\n      setCurrentCategory('');\n    } else {\n      const category = target.value;\n      dispatch(fetchMealsByCategory(category));\n      setCurrentCategory(target.value);\n    }\n  };\n\n  const renderFoodCards = () => {\n    const MAX_LENGTH = 12;\n\n    const filteredMeals = meals.slice(0, MAX_LENGTH);\n    return (\n      <section>\n        {filteredMeals.map((meal, index) => (\n          <MealRecipeCard key={ meal.idMeal } index={ index } meal={ meal } />\n        ))}\n      </section>\n    );\n  };\n\n  useEffect(() => {\n    const fetchBaseMeals = async () => {\n      const baseMeals = await fetch(\n        'https://www.themealdb.com/api/json/v1/1/search.php?s=',\n      );\n      const response = await baseMeals.json();\n      dispatch(populateMeals(response.meals));\n    };\n    if (callFunction === true) { handleSubmit(); } else {\n      fetchBaseMeals();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!meals) {\n      global.alert(\n        'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n      );\n    } else if (submitted === true && meals.length === 1) {\n      history.push(`/comidas/${meals[0].idMeal}`);\n    }\n  }, [meals]);\n\n  return (\n    <>\n      <Header\n        title={ title }\n        searchBar={ <SearchBar handleSubmit={ handleSubmit } /> }\n      />\n      <main>\n        <FoodCategories handleFilters={ handleFilters } />\n        {meals && renderFoodCards()}\n      </main>\n      <Footer />\n    </>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchFoodCategories } from '../redux/slices/recipesCategoriesSlice';\n\nexport default function FoodCategories({ handleFilters }) {\n  const dispatch = useDispatch();\n  const { foodCategories } = useSelector((store) => store.recipeCategories);\n\n  const renderFoodCategories = () => {\n    const MAX_LENGTH = 5;\n    const baseCategories = foodCategories.slice(0, MAX_LENGTH);\n    return (\n      <section>\n        { baseCategories.map((category) => (\n          <button\n            type=\"button\"\n            value={ category.strCategory }\n            data-testid={ `${category.strCategory}-category-filter` }\n            key={ category.strCategory }\n            onClick={ handleFilters }\n          >\n            { category.strCategory }\n          </button>\n\n        ))}\n        <button\n          type=\"button\"\n          value=\"All\"\n          data-testid=\"All-category-filter\"\n          onClick={ handleFilters }\n        >\n          All\n        </button>\n      </section>\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchFoodCategories());\n  }, []);\n\n  return (\n    <section>\n      { renderFoodCategories() }\n    </section>\n  );\n}\n\nFoodCategories.propTypes = {\n  handleFilters: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../styles/pageDetails.css';\nimport { Link } from 'react-router-dom';\n\nexport default function MealRecipeCard({ meal, index }) {\n  return (\n    <Link to={ `/comidas/${meal.idMeal}` }>\n      <div data-testid={ `${index}-recipe-card` }>\n        <img\n          data-testid={ `${index}-card-img` }\n          src={ meal.strMealThumb }\n          alt={ meal.strMeal }\n          width=\"100\"\n        />\n        <p data-testid={ `${index}-card-name` }>{ meal.strMeal }</p>\n      </div>\n    </Link>\n  );\n}\n\nMealRecipeCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  meal: PropTypes.shape({\n    idMeal: PropTypes.string.isRequired,\n    strMeal: PropTypes.string.isRequired,\n    strMealThumb: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","module.exports = __webpack_public_path__ + \"static/media/chiquem.d61725e1.png\";","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n  surpriseApi: [],\n};\n\nexport const fetchSurprise = createAsyncThunk(\n  'surpriseRecipe',\n  async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n    return response.json();\n  },\n);\n\nexport const surpiseRecipeSlice = createSlice({\n  name: 'supriseRecipe',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSurprise.fulfilled, (state, action) => {\n        state.surpriseApi = action.payload;\n      });\n  },\n\n});\n\nexport default surpiseRecipeSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n  ingredientsApi: [],\n  error: '',\n  callFunction: false,\n};\n\nexport const fetchIngredients = createAsyncThunk(\n  'ingredientList/fetchIngredients',\n  async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n    return response.json();\n  },\n);\n\nexport const ingredientListSlice = createSlice({\n  name: 'ingredientList',\n  initialState,\n  reducers: {\n    callFunctionTrue(state) {\n      state.callFunction = true;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchIngredients.fulfilled, (state, action) => {\n        state.ingredientsApi = action.payload.meals;\n      })\n      .addCase(fetchIngredients.rejected, (state, action) => {\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { callFunctionTrue } = ingredientListSlice.actions;\nexport default ingredientListSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n  ingredientsDrinkApi: [],\n  error: '',\n  callFunctionDrinks: false,\n};\n\nexport const fetchIngredientsDrink = createAsyncThunk(\n  'ingredientListDrink/fetchIngredientsDrink',\n  async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n    return response.json();\n  },\n);\n\nexport const ingredientListDrinkSlice = createSlice({\n  name: 'ingredientsListDrink',\n  initialState,\n  reducers: {\n    callFunctionDrinksTrue(state) {\n      state.callFunctionDrinks = true;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchIngredientsDrink.fulfilled, (state, action) => {\n        state.ingredientsDrinkApi = action.payload.drinks;\n      })\n      .addCase(fetchIngredientsDrink.rejected, (state, action) => {\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { callFunctionDrinksTrue } = ingredientListDrinkSlice.actions;\nexport default ingredientListDrinkSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport searchBarReducer from './slices/searchBarSlice';\nimport foodRecipesReducer from './slices/foodRecipesSlice';\nimport drinkRecipesReducer from './slices/drinkRecipesSlice';\nimport recipeCategoriesReducer from './slices/recipesCategoriesSlice';\nimport surpriseRecipeReducer from './slices/surpriseRecipeSlice';\nimport ingredientListReducer from './slices/ingredientListSlice';\nimport ingredientListDrinkReducer from './slices/ingredientsDrinkSlice';\n\nconst store = configureStore({\n  reducer: {\n    searchBar: searchBarReducer,\n    foodRecipes: foodRecipesReducer,\n    drinkRecipes: drinkRecipesReducer,\n    recipeCategories: recipeCategoriesReducer,\n    surpiseRecipe: surpriseRecipeReducer,\n    ingredientsList: ingredientListReducer,\n    ingredientsListDrink: ingredientListDrinkReducer,\n  },\n});\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { fetchDrinkById } from '../redux/slices/drinkRecipesSlice';\nimport { fecthSuggestedMeals } from '../redux/slices/foodRecipesSlice';\nimport '../styles/pageDetails.css';\n\nexport default function DrinkDetails() {\n  const history = useHistory();\n  const path = history.location.pathname;\n  const index = path.split('/')[2];\n  const dispatch = useDispatch();\n  const { drinkDetail } = useSelector((store) => store.drinkRecipes);\n  const { suggestedMeals } = useSelector((store) => store.foodRecipes);\n\n  useEffect(() => {\n    dispatch(fetchDrinkById(index));\n    dispatch(fecthSuggestedMeals());\n  }, []);\n\n  const mapIngredients = (drink) => {\n    const DEZ = 10;\n    const items = [];\n    const mensure = [];\n    for (let i = 1; i < DEZ; i += 1) {\n      if (drink[`strIngredient${i}`] !== null) {\n        items.push(drink[`strIngredient${i}`]);\n        mensure.push(drink[`strMeasure${i}`]);\n      }\n    }\n    return items.map((element, i) => (\n      <p key={ element } data-testid={ `${i}-ingredient-name-and-measure` }>\n        {element}\n        {mensure[i] ? `-  ${mensure[i]}` : ''}\n      </p>\n    ));\n  };\n\n  return (\n    <>\n      {drinkDetail.map((drink) => (\n        <div key={ drink } className=\"body\">\n          <img\n            className=\"food-img\"\n            src={ drink.strDrinkThumb }\n            data-testid=\"recipe-photo\"\n            alt=\"\"\n          />\n\n          <div className=\"container\">\n            <div className=\"header\">\n              <div classNam=\"title\">\n                <h3 data-testid=\"recipe-title\">{ drink.strDrink}</h3>\n                <p data-testid=\"recipe-category\">{drink.strAlcoholic}</p>\n              </div>\n\n              <div className=\"buttons\">\n                <button type=\"button\" data-testid=\"share-btn\">S</button>\n                <button type=\"button\" data-testid=\"favorite-btn\">L</button>\n              </div>\n            </div>\n\n            <div className=\"ingredients\">\n              <h2>Ingredientes</h2>\n              <div className=\"line\" />\n              <div className=\"values-ingredients\">\n                { mapIngredients(drink)}\n              </div>\n            </div>\n\n            <div className=\"instructions\">\n              <h3>Instruções</h3>\n              <div className=\"line\" />\n              <p data-testid=\"instructions\">{ drink.strInstructions }</p>\n            </div>\n\n            <div className=\"carousel\">\n              {\n                suggestedMeals.map(({ strMeal, strMealThumb }, indice) => (\n                  <div\n                    classNam=\"item\"\n                    key={ strMeal }\n\n                  >\n                    <button\n                      type=\"button\"\n                      data-testid={ `${indice}-recomendation-card` }\n                      className=\"card\"\n                    >\n                      <img\n                        src={ strMealThumb }\n                        alt={ strMeal }\n                        className=\"image-item\"\n                      />\n                      <p data-testid={ `${indice}-recomendation-title` }>{strMeal}</p>\n                    </button>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n          <button\n            className=\"start\"\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            onClick={ () => history.push(`/bebidas/${index}/in-progress`) }\n          >\n            Start\n          </button>\n        </div>\n      ))}\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function DrinkProgress() {\n  return <>DrinkProgress</>;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nexport default function Explore() {\n  const title = 'Explorar';\n\n  return (\n    <>\n      <Header title={ title } />\n      <Link to=\"/explorar/comidas\">\n        <button data-testid=\"explore-food\" type=\"button\">\n          Explorar Comidas\n        </button>\n      </Link>\n      <Link to=\"/explorar/bebidas\">\n        <button data-testid=\"explore-drinks\" type=\"button\">\n          Explorar Bebidas\n        </button>\n      </Link>\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nexport default function ExploreDrinks() {\n  const title = 'Explorar Bebidas';\n\n  return (\n    <>\n      <Header title={ title } />\n      <Link to=\"/explorar/bebidas/ingredientes\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-by-ingredient\"\n        >\n          Por Ingredientes\n\n        </button>\n      </Link>\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n        >\n          Me Surpreenda!\n        </button>\n      </Link>\n      <Footer />\n    </>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport {\n  fetchIngredientsDrink,\n  callFunctionDrinksTrue } from '../redux/slices/ingredientsDrinkSlice';\nimport { setQuery, setOption } from '../redux/slices/searchBarSlice';\n\nexport default function ExploreDrinksByIngredients() {\n  const title = 'Explorar Ingredientes';\n  const MAX_LENGTH = 12;\n  const { ingredientsDrinkApi } = useSelector((store) => store.ingredientsListDrink);\n  const filteredIngredientsDrink = ingredientsDrinkApi.slice(0, MAX_LENGTH);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchIngredientsDrink());\n  }, []);\n\n  const handleClick = (nome) => {\n    dispatch(setQuery(nome));\n    dispatch(setOption('ingredient'));\n    dispatch(callFunctionDrinksTrue());\n  };\n\n  return (\n    <>\n      <Header title={ title } />\n      {filteredIngredientsDrink.map((element, index) => (\n        <Link\n          key={ index }\n          to=\"/bebidas\"\n          onClick={ () => handleClick(element.strIngredient1) }\n        >\n          <div\n            key={ index }\n            data-testid={ `${index}-ingredient-card` }\n          >\n            <p data-testid={ `${index}-card-name` }>{element.strIngredient1}</p>\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ `https://www.thecocktaildb.com/images/ingredients/${element.strIngredient1}-Small.png` }\n              alt=\"imagem do ingrediente\"\n            />\n          </div>\n        </Link>\n      ))}\n\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nexport default function ExploreFood() {\n  const title = 'Explorar Comidas';\n\n  return (\n    <>\n      <Header title={ title } />\n      <Link to=\"/explorar/comidas/ingredientes\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-by-ingredient\"\n        >\n          Por Ingredientes\n\n        </button>\n      </Link>\n      <Link to=\"/explorar/comidas/area\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-by-area\"\n        >\n          Por Local de Origem\n        </button>\n      </Link>\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n        >\n          Me Surpreenda!\n        </button>\n      </Link>\n      ;\n      <Footer />\n    </>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchIngredients, callFunctionTrue } from '../redux/slices/ingredientListSlice';\nimport { setOption, setQuery } from '../redux/slices/searchBarSlice';\n\nexport default function ExploreFoodsByIngredients() {\n  const title = 'Explorar Ingredientes';\n  const MAX_LENGTH = 12;\n  const { ingredientsApi } = useSelector((store) => store.ingredientsList);\n  const filteredIngredients = ingredientsApi.slice(0, MAX_LENGTH);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchIngredients());\n  }, []);\n\n  const handleClick = (nome) => {\n    dispatch(setQuery(nome));\n    dispatch(setOption('ingredient'));\n    dispatch(callFunctionTrue());\n  };\n\n  return (\n    <>\n      <Header title={ title } />\n      {filteredIngredients.map((element, index) => (\n        <Link\n          onClick={ () => handleClick(element.strIngredient) }\n          key={ index }\n          to=\"/comidas\"\n        >\n          <div\n            value={ element.strIngredient }\n            key={ index }\n            data-testid={ `${index}-ingredient-card` }\n          >\n            <p\n              data-testid={ `${index}-card-name` }\n              value={ element.strIngredient }\n            >\n              {element.strIngredient}\n            </p>\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ `https://www.themealdb.com/images/ingredients/${element.strIngredient}-Small.png` }\n              alt=\"imagem do ingrediente\"\n              value={ element.strIngredient }\n            />\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\n\nexport default function ExploreFoodsByOrigin() {\n  const title = 'Explorar Origem';\n\n  // o Searchbar aqui é um dropdown\n  return (\n    <>\n      <Header title={ title } searchBar={ <SearchBar /> } />\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport Header from '../components/Header';\n\nexport default function FavoriteRecipes() {\n  const title = 'Receitas Favoritas';\n\n  return <Header title={ title } />;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { fetchFoodById } from '../redux/slices/foodRecipesSlice';\nimport { fetchDrinksRecommended } from '../redux/slices/drinkRecipesSlice';\nimport '../styles/pageDetails.css';\n\nexport default function FoodDetails() {\n  const history = useHistory();\n  const path = history.location.pathname;\n  const index = path.split('/')[2];\n  const dispatch = useDispatch();\n  const { mealDetail } = useSelector((store) => store.foodRecipes);\n  const { suggestedDrink } = useSelector((store) => store.drinkRecipes);\n\n  useEffect(() => {\n    dispatch(fetchFoodById(index));\n    dispatch(fetchDrinksRecommended());\n  }, []);\n\n  const mapIngredients = (meal) => {\n    const DEZ = 10;\n    const items = [];\n    const mensure = [];\n    for (let i = 1; i < DEZ; i += 1) {\n      if (meal[`strIngredient${i}`] !== '') {\n        items.push(meal[`strIngredient${i}`]);\n        mensure.push(meal[`strMeasure${i}`]);\n      }\n    }\n    return items.map((element, i) => (\n      <p\n        key={ element }\n        data-testid={ `${i}-ingredient-name-and-measure` }\n      >\n        {element}\n        { mensure[i] ? `-  ${mensure[i]}` : ''}\n      </p>\n    ));\n  };\n\n  return (\n    <>\n      FoodDetail\n      { mealDetail && mealDetail.map((meal) => (\n        <div key={ meal } className=\"body\">\n          <img\n            className=\"food-img\"\n            src={ meal.strMealThumb }\n            data-testid=\"recipe-photo\"\n            alt=\"imagem\"\n          />\n\n          <div className=\"container\">\n            <div className=\"header\">\n              <div className=\"title\">\n                <h2 data-testid=\"recipe-title\">{ meal.strMeal}</h2>\n                <p data-testid=\"recipe-category\">{meal.strCategory}</p>\n              </div>\n\n              <div className=\"buttons\">\n                <button type=\"button\" data-testid=\"share-btn\">S</button>\n                <button type=\"button\" data-testid=\"favorite-btn\">L</button>\n              </div>\n            </div>\n\n            <div\n              className=\"ingredients\"\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              <h3 className=\"text-ingredientes\">Ingredientes</h3>\n              <div className=\"line\" />\n              <div className=\"values-ingredients\">\n                { mapIngredients(meal)}\n              </div>\n            </div>\n\n            <div className=\"instructions\">\n              <h3>Instruções</h3>\n              <div className=\"line\" />\n              <p\n                className=\"text-instructions\"\n                data-testid=\"instructions\"\n              >\n                { meal.strInstructions }\n              </p>\n              <h3>Vídeo</h3>\n              <iframe\n                src={ meal.strYoutube }\n                title={ `video ${meal}` }\n                frameBorder=\"0\"\n                data-testid=\"video\"\n                allow=\" autoplay; clipboard-write; encrypted-media; picture-in-picture\"\n              />\n            </div>\n\n            <div className=\"carousel\">\n              {\n                suggestedDrink.map(({ strDrink, strDrinkThumb }, indice) => (\n                  <div\n                    key={ strDrink }\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"card\"\n                      data-testid={ `${indice}-recomendation-card` }\n                    >\n                      <img\n                        className=\"image-item\"\n                        src={ strDrinkThumb }\n                        alt={ strDrink }\n                      />\n                      <p data-testid={ `${indice}-recomendation-title` }>{strDrink}</p>\n                    </button>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n          <button\n            className=\"start\"\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            onClick={ () => history.push(`/comidas/${index}/in-progress`) }\n          >\n            Iniciar Reaceita\n          </button>\n        </div>\n      ))}\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function FoodProgress() {\n  return <button className=\"teste\">aaaaaa</button>;\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/login-form.css';\n\nexport default function Login() {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [help, setHelp] = useState('noHelp');\n\n  const isLoginValid = () => {\n    const MIN_LENGTH = 6;\n    const isPasswordValid = password.length > MIN_LENGTH;\n    const parseEmail = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    const isEmailValid = parseEmail.test(email);\n    return isEmailValid && isPasswordValid;\n  };\n\n  const toggleHelp = () => {\n    switch (help) {\n    case 'help':\n      setHelp('noHelp');\n      break;\n    case 'noHelp':\n      setHelp('help');\n      break;\n    default:\n      break;\n    }\n  };\n\n  const isDisabled = !isLoginValid();\n  const handleSubmit = () => {\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    localStorage.setItem(\n      'user',\n      JSON.stringify({\n        email,\n      }),\n    );\n    history.push('/comidas');\n  };\n\n  return (\n    <form className=\"\">\n      <div className={ help }>\n        <button type=\"button\" onClick={ toggleHelp } className=\"close\">X</button>\n        <div className=\"clicavel\"><p>O botão não é Clicavel</p></div>\n        <div className=\"registro\"><p>Não tenho registo</p></div>\n        <div className=\"rapido\"><p>Quero um meio Rápido</p></div>\n      </div>\n      <fieldset className=\"container\">\n        <div className=\"box\">\n          <p>Email</p>\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            value={ email }\n            onChange={ (e) => setEmail(e.target.value) }\n            className=\"input\"\n          />\n        </div>\n\n        <div className=\"box\">\n          <p>Senha</p>\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n            placeholder=\"senha\"\n            value={ password }\n            onChange={ (e) => setPassword(e.target.value) }\n            className=\"input\"\n          />\n        </div>\n\n        <button\n          data-testid=\"login-submit-btn\"\n          disabled={ isDisabled }\n          type=\"button\"\n          onClick={ handleSubmit }\n          className=\"input box submitForm\"\n        >\n          Entrar\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={ toggleHelp }\n          className=\"input box especialButton \"\n        >\n          Estou com problemas para acessar\n        </button>\n\n      </fieldset>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport Login from '../components/Login';\nimport chiquem from '../images/chiquem.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/home.css';\n\nexport default function Home() {\n  const history = useHistory();\n\n  return (\n    <div className=\"meals home\">\n      <button\n        className=\"cheat\"\n        type=\"button\"\n        onTouchMove={ () => history.push('/comidas') }\n      >\n        <div className=\"logo\">\n          <button\n            className=\"cheat\"\n            type=\"button\"\n            onDoubleClick={ () => history.push('/comidas') }\n          >\n            <img src={ chiquem } className=\"chiquem-logo\" alt=\"logo\" />\n          </button>\n        </div>\n\n        <main className=\"container-login-form\">\n          <p className=\"describe\">Insira email e senha para acessar</p>\n          <Login />\n        </main>\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nexport default function Profile() {\n  const history = useHistory();\n  const title = 'Perfil';\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    const getEmail = async () => {\n      const user = await JSON.parse(localStorage.getItem('user'));\n      setEmail(user.email);\n    };\n    getEmail();\n  });\n\n  const handleClick = async () => {\n    localStorage.clear();\n    history.push('/');\n  };\n\n  return (\n    <>\n      <Header title={ title } />\n      <main>\n        <h2 data-testid=\"profile-email\">{email}</h2>\n        <Link to=\"/receitas-feitas\">\n          <button type=\"button\" data-testid=\"profile-done-btn\">\n            Receitas Feitas\n          </button>\n        </Link>\n        <Link to=\"/receitas-favoritas\">\n          <button type=\"button\" data-testid=\"profile-favorite-btn\">\n            Receitas Favoritas\n          </button>\n        </Link>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ handleClick }\n          >\n            Sair\n          </button>\n        </Link>\n      </main>\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport Header from '../components/Header';\n\nexport default function RecipesMade() {\n  const title = 'Receitas Feitas';\n\n  return <Header title={ title } />;\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DrinkDetails from './pages/DrinkDetails';\nimport DrinkProgress from './pages/DrinkProgress';\nimport DrinkRecipes from './pages/DrinkRecipes';\nimport Explore from './pages/Explore';\nimport ExploreDrinks from './pages/ExploreDrinks';\nimport ExploreDrinksByIngredients from './pages/ExploreDrinksByIngredients';\nimport ExploreFood from './pages/ExploreFood';\nimport ExploreFoodsByIngredients from './pages/ExploreFoodsByIngredients';\nimport ExploreFoodsByOrigin from './pages/ExploreFoodsByOrigin';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport FoodDetails from './pages/FoodDetails';\nimport FoodProgress from './pages/FoodProgress';\nimport FoodRecipes from './pages/FoodRecipes';\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport RecipesMade from './pages/RecipesMade';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route\n        path=\"/explorar/comidas/ingredientes\"\n        component={ ExploreFoodsByIngredients }\n      />\n      <Route\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ ExploreDrinksByIngredients }\n      />\n      <Route path=\"/explorar/comidas/area\" component={ ExploreFoodsByOrigin } />\n      <Route path=\"/comidas/:id/in-progress\" component={ FoodProgress } />\n      <Route path=\"/bebidas/:id/in-progress\" component={ DrinkProgress } />\n      <Route path=\"/comidas/:id\" component={ FoodDetails } />\n      <Route path=\"/bebidas/:id\" component={ DrinkDetails } />\n      <Route path=\"/explorar/comidas\" component={ ExploreFood } />\n      <Route path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n      <Route path=\"/receitas-feitas\" component={ RecipesMade } />\n      <Route path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n      <Route path=\"/perfil\" component={ Profile } />\n      <Route path=\"/explorar\" component={ Explore } />\n      <Route path=\"/comidas\" component={ FoodRecipes } />\n      <Route path=\"/bebidas\" component={ DrinkRecipes } />\n      <Route exact path=\"/\" component={ Home } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename=\"/trybe-project-recipes-app\">\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}